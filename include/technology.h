#pragma once
#include <iostream>
#include <vector>
#include <algorithm> // For std::find

/**
 * @class Technology
 * @brief A class representing a technology with attributes and methods to manage it.
 * 
 * The Technology class provides attributes to store the name, weekly innovation points,
 * research progress, research cost, and category of the technology. It also provides methods
 * to display technology information, modify innovation points, and manage research progress.
 */
class Technology {
    private:
        std::string name; ///< Technology name
        int weeklyInnovation; ///< Innovation points generated per week
        int researchProgress; ///< Progress towards completing the technology
        int researchCost; ///< Innovation points required to unlock

        std::string category; ///< Category of the technology

        // List of available technology categories
        static const std::vector<std::string> techCategories;

    public:
        // Constructor

        /**
         * @brief Constructor for the Technology class.
         * @param techName The name of the technology.
         * @param techInnovation The innovation points generated per week.
         * @param cost The innovation points required to unlock.
         * @param techCategory The category of the technology.
         */
        Technology(std::string techName, int techInnovation, int cost, std::string techCategory);

        // Destructor

        /**
         * @brief Destructor for the Technology class.
         */
        ~Technology();

        // Getters

        /**
         * @brief Get the name of the technology.
         * @return The name of the technology.
         */
        std::string getName() const;

        /**
         * @brief Get the weekly innovation points generated by the technology.
         * @return The weekly innovation points.
         */
        int getWeeklyInnovation() const;

        /**
         * @brief Get the research progress of the technology.
         * @return The research progress.
         */
        int getResearchProgress() const;

        /**
         * @brief Get the research cost of the technology.
         * @return The research cost.
         */
        int getResearchCost() const;

        /**
         * @brief Get the category of the technology.
         * @return The category of the technology.
         */
        std::string getCategory() const;

        // Display functions

        /**
         * @brief Display information about the technology.
         */
        void displayTechInfo() const;

        /**
         * @brief Display the available technology categories.
         */
        void displayTechCategories() const;

        // Methods to modify innovation points

        /**
         * @brief Increase the weekly innovation points.
         * @param value The amount to increase the innovation points by.
         */
        void increaseWeeklyInnovation(int value);

        /**
         * @brief Decrease the weekly innovation points.
         * @param value The amount to decrease the innovation points by.
         */
        void decreaseWeeklyInnovation(int value);
        
        // Research methods

        /**
         * @brief Progress the research of the technology.
         */
        void progressResearch();

        /**
         * @brief Check if the technology is researched.
         * @return True if the technology is researched, false otherwise.
         */
        bool isResearched() const;

        // Static method to display all technology categories

        /**
         * @brief Display all available technology categories.
         */
        static void displayAllTechCategories();
};
